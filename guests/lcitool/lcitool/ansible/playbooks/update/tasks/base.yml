---
- name: Enable fedora-rawhide-kernel-nodebug repository
  template:
    src: '{{ playbook_base }}/templates/fedora-rawhide-kernel-nodebug.repo.j2'
    dest: /etc/yum.repos.d/fedora-rawhide-kernel-nodebug.repo
    owner: root
    group: root
  when:
    - os.name == 'Fedora'
    - os.version == 'Rawhide'

- block:
    - name: Install the Stream release repositories
      package:
        name: centos-release-stream
        state: latest

    # CentOS Stream removed all the original Stream repos and instead updated
    # the CentOS-Linux-* repositories to point to Stream instead.
    # It also regressed in the PowerTools repo naming all of which is now
    # contained in the 'centos-stream-release' package which replaces the
    # original 'centos-release-stream' (which btw cannot be installed on its
    # own).
    #
    # TODO: If the 'centos-stream-release' package ever fully replaces
    # 'centos-release-stream', i.e. will be available from the Extras repo, the
    # task above along with this commentary can be removed.
    - name: Install the Stream release repositories
      package:
        name: centos-stream-release
        state: latest

  when:
    - os.name == 'CentOS'
    - os.version == 'Stream'

- name: Enable PowerTools repository
  command: '{{ packaging.command }} config-manager --set-enabled powertools -y'
  args:
    warn: no
  when:
    - os.name == 'CentOS'
    - not os.version == '7'

- name: Enable EPEL repository
  package:
    name: epel-release
    state: latest
  when:
    - os.name == 'CentOS'

- name: Enable Advanced Virtualization repository
  package:
    name: centos-release-advanced-virtualization
    state: latest
  when:
    - os.name == 'CentOS'
    - os.version == '8' or os.version == 'Stream'

- name: Create OpenVZ key
  template:
    src: '{{ playbook_base }}/templates/openvz.key'
    dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-OpenVZ
    owner: root
    group: root
  when:
    - os.name == 'CentOS'
    - os.version == '7'

- name: Import OpenVZ key
  command: 'rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-OpenVZ'
  args:
    warn: no
  when:
    - os.name == 'CentOS'
    - os.version == '7'

- name: Enable OpenVZ repository
  template:
    src: '{{ playbook_base }}/templates/openvz.repo.j2'
    dest: /etc/yum.repos.d/openvz.repo
    owner: root
    group: root
  when:
    - os.name == 'CentOS'
    - os.version == '7'

- name: Update installed packages
  package:
    name: '*'
    state: latest
  when:
    - packaging.format == 'rpm'
    - not ( os.name == 'Fedora' and
            os.version == 'Rawhide' )

- name: Update installed packages
  package:
    name: fedora-gpg-keys
    state: latest
    disable_gpg_check: yes
  when:
    - os.name == 'Fedora'
    - os.version == 'Rawhide'

- name: Update installed packages
  command: '{{ packaging.command }} update --refresh --exclude "kernel*" -y'
  args:
    warn: no
  when:
    - os.name == 'Fedora'
    - os.version == 'Rawhide'

- name: Update installed packages
  command: '{{ packaging.command }} update --disablerepo="*" --enablerepo=fedora-rawhide-kernel-nodebug "kernel*" -y'
  args:
    warn: no
  when:
    - os.name == 'Fedora'
    - os.version == 'Rawhide'

- name: Update installed packages
  apt:
    upgrade: dist
    update_cache: yes
  when:
    - packaging.format == 'deb'

- name: Update installed packages
  shell: '{{ packaging.command }} update && {{ packaging.command }} upgrade -y'
  args:
    warn: no
  when:
    - packaging.format == 'pkg'

- name: Clean up packages after update
  command: '{{ packaging.command }} mark install "kernel*"'
  args:
    warn: no
  when:
    - os.name == 'Fedora'

- name: Clean up packages after update
  shell: '{{ packaging.command }} clean packages -y && {{ packaging.command }} autoremove -y'
  args:
    warn: no
  when:
    - packaging.format == 'rpm'
    - os.name != 'OpenSUSE'

- name: Clean up packages after update
  shell: '{{ packaging.command }} clean'
  args:
    warn: no
  when:
    - os.name == 'OpenSUSE'

- name: Clean up packages after update
  apt:
    autoclean: yes
    autoremove: yes
  when:
    - packaging.format == 'deb'

- name: Clean up packages after update
  shell: '{{ packaging.command }} clean -y && {{ packaging.command }} autoremove -y'
  args:
    warn: no
  when:
    - packaging.format == 'pkg'

- name: Configure hostname
  hostname:
    name: '{{ inventory_hostname }}'
