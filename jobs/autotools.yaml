
- job-template:
    id: autotools-build-job
    name: '{name}-{branch}-build{variant}'
    project-type: matrix
    description: '{title} Build'
    autogen_args: ''
    workspace: '{name}-{branch}{variant}'
    child-workspace: '.'
    block-downstream: true
    block-upstream: true
    wrappers:
      - timeout:
          abort: true
          type: absolute
          timeout: 90
          write-description: 'Aborted build after 90 minutes'
    properties:
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 1000
    scm:
      - git:
          url: git://n64.pufty.ci.centos.org/{name}.git
          branches:
            - origin/{branch}
          clean:
            after: true
          skip-tag: true
          wipe-workspace: false
    triggers:
      - reverse:
          jobs: '{obj:parent_jobs}'
      - pollscm:
          cron: "H/20 * * * *"
    axes:
      - axis:
          name: systems
          type: slave
          values: '{obj:machines}'
    builders:
      - shell: |
          {global_env}
          {local_env}
          mkdir build
          cd build
          ../autogen.sh --prefix=$VIRT_PREFIX {autogen_args}
          $MAKE -j{smp}
          $MAKE -j{smp} install
    publishers:
      - email:
          recipients: '{obj:spam}'
          notify-every-unstable-build: true
          send-to-individuals: false

- job-template:
    id: autotools-syntax-check-job
    name: '{name}-{branch}-syntax-check{variant}'
    project-type: matrix
    description: '{title} Syntax Check'
    workspace: '{name}-{branch}{variant}'
    child-workspace: '.'
    block-downstream: true
    block-upstream: true
    wrappers:
      - timeout:
          abort: true
          type: absolute
          timeout: 90
          write-description: 'Aborted build after 90 minutes'
    properties:
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 1000
    triggers:
      - reverse:
          jobs: '{obj:parent_jobs}'
    axes:
      - axis:
          name: systems
          type: slave
          values: '{obj:machines}'
    builders:
      - shell: |
          {global_env}
          {local_env}
          cd build
          $MAKE -j{smp} syntax-check
    publishers:
      - email:
          recipients: '{obj:spam}'
          notify-every-unstable-build: true
          send-to-individuals: false

- job-template:
    id: autotools-check-job
    name: '{name}-{branch}-check{variant}'
    project-type: matrix
    description: '{title} Check'
    workspace: '{name}-{branch}{variant}'
    child-workspace: '.'
    block-downstream: true
    block-upstream: true
    wrappers:
      - timeout:
          abort: true
          type: absolute
          timeout: 90
          write-description: 'Aborted build after 90 minutes'
    properties:
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 1000
    triggers:
      - reverse:
          jobs: '{obj:parent_jobs}'
    axes:
      - axis:
          name: systems
          type: slave
          values: '{obj:machines}'
    builders:
      - shell: |
          {global_env}
          {local_env}
          cd build
          if ! $MAKE -j{smp} check
          then
              cat tests/test-suite.log || true
              exit 1
          fi
    publishers:
      - email:
          recipients: '{obj:spam}'
          notify-every-unstable-build: true
          send-to-individuals: false

- job-template:
    id: autotools-rpm-job
    name: '{name}-{branch}-rpm{variant}'
    project-type: matrix
    description: '{title} RPM'
    archive_format: gz
    workspace: '{name}-{branch}{variant}'
    child-workspace: '.'
    block-downstream: true
    block-upstream: true
    wrappers:
      - timeout:
          abort: true
          type: absolute
          timeout: 90
          write-description: 'Aborted build after 90 minutes'
    properties:
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 1000
    triggers:
      - reverse:
          jobs: '{obj:parent_jobs}'
    axes:
      - axis:
          name: systems
          type: slave
          values: '{obj:machines}'
    builders:
      - shell: |
          {global_env}
          {local_env}
          cd build
          sed -i -e 's/BuildRequires: osinfo-db.*//' {name}.spec
          sed -i -e 's/BuildRequires: libvirt.*devel.*//' {name}.spec
          sed -i -e 's/BuildRequires: pkgconfig(libvirt.*).*//' {name}.spec
          rm -f *.tar.{archive_format}
          $MAKE -j{smp} dist
          rpmbuild --define "_topdir `pwd`/rpmbuild" -ta {name}-*.tar.{archive_format}
    publishers:
      - email:
          recipients: '{obj:spam}'
          notify-every-unstable-build: true
          send-to-individuals: false

- job-template:
    id: autotools-mingw-job
    name: '{name}-{branch}-mingw{variant}'
    project-type: matrix
    description: '{title} MinGW'
    autogen_args: ''
    workspace: '{name}-{branch}-mingw{variant}'
    child-workspace: '.'
    block-downstream: true
    block-upstream: true
    wrappers:
      - timeout:
          abort: true
          type: absolute
          timeout: 90
          write-description: 'Aborted build after 90 minutes'
    properties:
      - build-discarder:
          days-to-keep: 30
          num-to-keep: 1000
    scm:
      - git:
          url: git://n64.pufty.ci.centos.org/{name}.git
          branches:
            - origin/{branch}
          clean:
            after: true
          skip-tag: true
          wipe-workspace: false
    triggers:
      - reverse:
          jobs: '{obj:parent_jobs}'
      - pollscm:
          cron: "H/20 * * * *"
    axes:
      - axis:
          name: systems
          type: slave
          values: '{obj:machines}'
    builders:
      - shell: |
          {global_env}
          {local_env}
          # The MinGW build needs to use the MinGW compiler toolchain,
          # while $CC is pointing to the native toolchain, so we have
          # to unset it here.
          export CC=

          mkdir -p build32
          cd build32

          export PKG_CONFIG_LIBDIR="/usr/i686-w64-mingw32/sys-root/mingw/lib/pkgconfig:/usr/i686-w64-mingw32/sys-root/mingw/share/pkgconfig"
          export PKG_CONFIG_PATH="$VIRT_PREFIX/i686-w64-mingw32/sys-root/mingw/lib/pkgconfig" \
          export PREFIX=$VIRT_PREFIX/i686-w64-mingw32/sys-root/mingw
          ../autogen.sh --host=i686-w64-mingw32 --prefix=$PREFIX
          $MAKE -j{smp}
          $MAKE -j{smp} install
      - shell: |
          {global_env}
          {local_env}
          # See above
          export CC=

          mkdir -p build64
          cd build64

          export PKG_CONFIG_LIBDIR="/usr/x86_64-w64-mingw32/sys-root/mingw/lib/pkgconfig:/usr/x86_64-w64-mingw32/sys-root/mingw/share/pkgconfig"
          export PKG_CONFIG_PATH="$VIRT_PREFIX/x86_64-w64-mingw32/sys-root/mingw/lib/pkgconfig" \
          export PREFIX=$VIRT_PREFIX/x86_64-w64-mingw32/sys-root/mingw
          ../autogen.sh --host=x86_64-w64-mingw32 --prefix=$PREFIX
          $MAKE -j{smp}
          $MAKE -j{smp} install
    publishers:
      - email:
          recipients: '{obj:spam}'
          notify-every-unstable-build: true
          send-to-individuals: false
