# Variables that can be set to control the behaviour of
# pipelines that are run
#
#  - RUN_CONTAINER_BUILDS - CI pipelines in upstream only
#    publish containers if CI file changes are detected.
#    Setting this variable to a non-empty value will force
#    re-publishing, even when no file changes are detected.
#    Typically to use from a scheduled job once a month.
#
#  - RUN_UPSTREAM_NAMESPACE - the upstream namespace is
#    configured to default to 'test-group'. When testing
#    changes to CI it might be useful to use a different
#    upstream. Setting this variable will override the
#    namespace considered to be upstream.
#
# These can be set as git push options
#
#  $ git push -o ci.variable=RUN_CONTAINER_BUILDS=1
#
# Aliases can be set for common usage
#
#  $ git config --local alias.push-all-ctr "push -o ci.variable=RUN_CONTAINER_BUILDS=1"
#
# Allowing the less verbose invocation
#
#  $ git push-all-ctr
#
# Pipeline variables can also be set in the repository
# pipeline config globally, or set against scheduled pipelines


variables:
  RUN_UPSTREAM_NAMESPACE: test-group


workflow:
  rules:
    # upstream+forks: Avoid pipelines on tag pushes
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG'
      when: never

    # upstream+forks: Allow pipelines in scenarios we've figured out job rules
    - if: '$CI_PIPELINE_SOURCE =~ /^(push|api|web|schedule)$/'
      when: always

    # upstream+forks: Avoid all other pipelines
    - when: never

include:
  - local: '/ci/gitlab/container-templates.yml'
  - local: '/ci/gitlab/build-templates.yml'
  - local: '/ci/gitlab/sanity-checks.yml'
  - local: '/ci/gitlab/containers.yml'
  - local: '/ci/gitlab/builds.yml'
